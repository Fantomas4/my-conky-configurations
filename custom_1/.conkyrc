--[[
#======================================================================================
# CONKY
# For commands in conky.config section:
# http://conky.sourceforge.net/config_settings.html
#
# For commands in conky.text section:
# http://conky.sourceforge.net/variables.html
#
# A PDF with all variables is provided
#=====================================================================================
# GENERAL INFO ABOUT FONTS
# Go and look for a nice font on sites like http://www.dafont.com/
# Download and unzip - double click the font to install it (font-manager must be installed)
# No font-manager then put fonts in ~/.fonts
# Change the font name in the conky
# The name can be known with a command in the terminal: fc-list | grep "part of name"
# Change width and height of the conky according to font
# Reboot your system or fc-cache -fv in terminal
# Enjoy
#=====================================================================================
# FONTS FOR THIS CONKY
# http://www.dafont.com/style-bats.font
#======================================================================================
# Titus Modifications (downloaded and editted Chris Titus' .configrc) 
#======================================================================================
# Changed time from Roboto to GE Inspira which is a base Conky Gotham Addon
# Changed Drives from 2 to 3
# Modified one_window_type from desktop to normal for KDE compatibility
# Modified Ethernet settings
# Modified Pink Lines to Bright Blue
# Removed Extra symbols and incorrect formatting
#======================================================================================

]]

conky.config = {

	--Various settings

	background = true, 							-- forked to background
	update_interval = 1,						-- update interval
	cpu_avg_samples = 2,						-- The number of samples to average for CPU monitoring.
	diskio_avg_samples = 10,					-- The number of samples to average for disk I/O monitoring.
	net_avg_samples = 2,						-- The number of samples to average for net data
	double_buffer = true,						-- Use the Xdbe extension? (eliminates flicker)
	if_up_strictness = 'address',				-- how strict if testing interface is up - up, link or address
	no_buffers = true,							-- Subtract (file system) buffers from used memory?
	temperature_unit = 'celsius',				-- fahrenheit or celsius
	text_buffer_size = 2048,					-- size of buffer for display of content of large variables - default 256
	imlib_cache_size = 0,                       -- disable image cache to get a new spotify cover per song


	--Placement

	alignment = 'top_right',					-- top_left,top_middle,top_right,bottom_left,bottom_middle,bottom_right,
												-- middle_left,middle_middle,middle_right,none
	--Arch Duoscreen
	--gap_x = -1910,
	gap_x = 0,									-- pixels between right or left border
	gap_y = 0,									-- pixels between bottom or left border
	minimum_height = 1100,						-- minimum height of window
	minimum_width = 300,						-- minimum width of window
	maximum_width = 300,						-- maximum width of window

	--Graphical

	border_inner_margin = 5, 					-- margin between border and text
	border_outer_margin = 0, 					-- margin between border and edge of window
	border_width = 0, 							-- border width in pixels
	default_bar_width = 0,					    -- default is 0 - full width
	default_bar_height = 10,					-- default is 6
	default_gauge_height = 25,					-- default is 25
	default_gauge_width = 40,					-- default is 40
	default_graph_height = 40,					-- default is 25
	default_graph_width = 0,					-- default is 0 - full width
	default_shade_color = '#000000',			-- default shading colour
	default_outline_color = '#000000',			-- default outline colour
	draw_borders = false,						-- draw borders around text
	draw_graph_borders = true,					-- draw borders around graphs
	draw_shades = false,						-- draw shades
	draw_outline = false,						-- draw outline
	stippled_borders = 0,						-- dashing the border

	--Textual

	extra_newline = false,						-- extra newline at the end - for asesome's wiboxes
	format_human_readable = true,				-- KiB, MiB rather then number of bytes
	font = 'Roboto Mono:size=10',  				-- font for complete conky unless in code defined
	max_text_width = 0,							-- 0 will make sure line does not get broken if width too smal
	max_user_text = 16384,						-- max text in conky default 16384
	override_utf8_locale = true,				-- force UTF8 requires xft
	short_units = true,							-- shorten units from KiB to k
	top_name_width = 21,						-- width for $top name value default 15
	top_name_verbose = false,					-- If true, top name shows the full command line of  each  process - Default value is false.
	uppercase = false,							-- uppercase or not
	use_spacer = 'none',						-- adds spaces around certain objects to align - default none
	use_xft = true,								-- xft font - anti-aliased font
	xftalpha = 1,								-- alpha of the xft font - between 0-1

	--Windows

	own_window = true,							-- create your own window to draw
	own_window_argb_value = 180,			    -- real transparency - composite manager required 0-255
	own_window_argb_visual = true,				-- use ARGB - composite manager required
	own_window_colour = '#000000',				-- set colour if own_window_transparent no
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',  -- if own_window true - just hints - own_window_type sets it
	own_window_transparent = false,				-- if own_window_argb_visual is true sets background opacity 0%
	own_window_title = 'system_conky',			-- set the name manually  - default conky "hostname"
	own_window_type = 'normal',				-- if own_window true options are: normal/override/dock/desktop/panel


	--Colours

	default_color = '#D9DDE2',  				-- default color and border color
	color1 = '#FFFFFF',							-- white
	color2 = '#E60012',							-- ThinkPad red
	color3 = '#0394FF',							-- CPU blue
	color5 = '#FFA726',                         -- orange
	color6 = '#FFFB03',                         -- yellow

	--Signal Colours
	color7 = '#C0FF00',  						--green
	color8 = '#FFA726',  						--orange
	color9 = '#F1544B',  						--firebrick

    --Lua


};

conky.text = [[
${color1}${voffset 4}${font GE Inspira:size=36}${alignc}${time %l}:${time %M} ${time %p}${font}${color}
${color1}${voffset 4}${font GE Inspira:size=12}${alignc}${time %A} ${time %B} ${time %e}, ${time %Y}${font}${color}

${color1}${font Roboto:bold:size=10}${voffset 2}S Y S T E M   ${color}${color2}${hr 2}${font}${color}

${voffset -30}
${color1}Hostname:${color1} ${alignr}${nodename}
${color1}OS: $alignr ${color1}${execi 6000 lsb_release -d| awk '{$1=""; print $0}'}
${color1}Kernel: $alignr ${color1} $kernel
${color1}Architecture: $alignr ${color1} $machine
${color1}Uptime:${color1} ${alignr} ${uptime}

${color1}${font Roboto:bold:size=10}P R O C E S S O R S  ${color}${color2}${hr 2}${font}${color}

${voffset -30}
${execi 1000 grep model /proc/cpuinfo | cut -d : -f2 | tail -1 | sed 's/\s//'}
${cpugraph cpu0  0394FF 004B82 -t}
CPU ${color3}Usage: ${color}${cpu cpu0}% ${cpubar cpu0}
${voffset -10}
${color1}CPU${color} ${color2}Core 1:${color} ${alignr}${offset -10}${cpu cpu1}% ${alignr}${cpubar cpu1 15,80}
${color1}CPU${color} ${color2}Core 2:${color} ${alignr}${offset -10}${cpu cpu2}% ${alignr}${cpubar cpu1 15,80}
${color1}CPU${color} ${color2}Core 3:${color} ${alignr}${offset -10}${cpu cpu3}% ${alignr}${cpubar cpu1 15,80}
${color1}CPU${color} ${color2}Core 4:${color} ${alignr}${offset -10}${cpu cpu4}% ${alignr}${cpubar cpu1 15,80}
${voffset -10}
${color1}CPU Freq:${color} $alignr${freq}MHz
${color1}CPU Temp:${color} $alignr ${acpitemp}Â°C
${color1}Fan Speed:${color} $alignr ${ibm_fan}rpm

${color1}${font Roboto:bold:size=10}M E M O R Y   ${color}${color2}${hr 2}${font}${color}

${voffset -30}
RAM $alignc $mem / $memmax $alignr $memperc%
${color5}${membar}${color}
SWAP $alignc ${swap} / ${swapmax} $alignr ${swapperc}%
${color5}${swapbar}${color}

${color1}${font Roboto:bold:size=10}N E T W O R K  ${color}${color2}${hr 2}${font}${color}
${voffset -30}
# Determine if the active network interface is wireless
${if_existing /sys/class/net/wlp4s0/operstate up}
${color1}Local IP:${color}${alignr}${color1}Connection Type:${color}
${execi 1000 ip a | grep inet | grep -vw lo | grep -v inet6 | cut -d \/ -f1 | sed 's/[^0-9\.]*//g'}${alignr}${color1}Wireless${color}
${voffset -5}
Download ${alignr}${downspeedf wlp4s0}KiB/s (${totaldown wlp4s0})
${color1}${downspeedgraph wlp4s0 50,300 ADFF2F 32CD32 -t}
Upload ${alignr}${upspeedf wlp4s0}KiB/s (${totalup wlp4s0})
${color1}${upspeedgraph wlp4s0 50,300 FF0000 8B0000 -t}
${else}\
# Determine if the active network interface is wired
${if_existing /sys/class/net/enp0s31f6/operstate up}
${color1}Local IP:${color}${alignr}${color1}Connection Type:${color}
${execi 1000 ip a | grep inet | grep -vw lo | grep -v inet6 | cut -d \/ -f1 | sed 's/[^0-9\.]*//g'}${alignr}${color1}Wired${color}
${voffset -10}
Download ${alignr}${downspeedf enp0s31f6}KiB/s (${totaldown enp0s31f6})
${color1}${downspeedgraph enp0s31f6 50,300 ADFF2F 32CD32 -t}
Upload ${alignr}${upspeedf enp0s31f6}KiB/s (${totalup enp0s31f6})
${color1}${upspeedgraph enp0s31f6 50,300 FF0000 8B0000 -t}
${else}

${endif}
${endif}
${color1}${font Roboto:bold:size=10}T O P  P R O C E S S E S ${color}${color2}${hr 2}${font}${color}

${voffset -30}
${font Roboto Mono:normal:size=9}${color6}Name${color} $alignr ${color6}PID${color}    ${color3}CPU%${color}   ${color5}MEM%${color}${font}${font Roboto Mono:normal:size=9}
${top name 1} $alignr ${top pid 1} ${top cpu 1}% ${top mem 1}%
${top name 2} $alignr ${top pid 2} ${top cpu 2}% ${top mem 2}%
${top name 3} $alignr ${top pid 3} ${top cpu 3}% ${top mem 3}%
${top name 4} $alignr ${top pid 4} ${top cpu 4}% ${top mem 4}%
${top name 5} $alignr ${top pid 5} ${top cpu 5}% ${top mem 5}%
${font}
]];